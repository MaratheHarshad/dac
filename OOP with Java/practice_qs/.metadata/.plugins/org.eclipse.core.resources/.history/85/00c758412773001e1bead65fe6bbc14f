package tester;

import java.time.LocalDate;
import java.util.HashMap;
import java.util.Scanner;

import core.Brand;
import core.Material;
import core.Pen;
import core.PenException;
import utils.PenValidation;

public class PenManager {

	public static void main(String[] args) 
	{
		try(Scanner sc = new Scanner(System.in))
		{
			HashMap<Integer, Pen> penMap = new HashMap<>();
			boolean exit  = false;
			
			while(!exit)
			{
				System.out.println("1. Add \n2. Update stock \n3. Set discount of 20% which not sold in 3 months "
						+ "\n4.Remove pens not sold from 9 months \n 5. Display all \n6. Sort by update date \n7. sort by price in desc order"
						+ "\n8. remove pen price less than 20 \n9. Remove pens of alloy steel \n10. Remove pens of specific brand enter by user"
						+ "\n 11. remove pen if qty is 0 \n0. Exit");
				System.out.println("Enter choice");
				
				try
				{
					switch(sc.nextInt())
					{
						case 1: //Add
								System.out.println(" brand,  material,  color,  inkColor,  qty,  updateDate,listingDate,  price,  discount");
								Pen p = PenValidation.validateAllInputs(sc.next(),sc.next(),sc.next(),sc.next(),sc.nextInt(),sc.next(),sc.next(),sc.nextDouble(),sc.nextDouble(),penMap);
								penMap.put(p.getId(), p);
								System.out.println("Pen added !!!");break;
								
						case 2 : //Update stock
								System.out.println("Enter ID");
								int id=sc.nextInt();
								
								if(!penMap.containsKey(id))
								{
									throw new PenException("Id not found ");
								}
								else
								{
									System.out.println("Enter new qty");
									int qt = sc.nextInt();
									
									penMap.get(id).setQty(qt);
									System.out.println("Qty updated ....");	
									penMap.get(id).setUpdateDate(LocalDate.now());
								}
								break;
								
						case 3: //Set discount of 20% which not sold in 3 months
								LocalDate now = LocalDate.now();
								LocalDate tmonths = now.minusMonths(3);
								
								for(Pen p1 : penMap.values())
								{
									if(p1.getUpdateDate().isBefore(tmonths))
									{
										p1.setDiscount(p1.getPrice()-p1.getPrice()*0.2);
									}
									
								}
								System.out.println("Discount added succesfully ...");
								break;
								
						case 4://Remove pens not sold from 9 months
								LocalDate date = LocalDate.now();
								LocalDate nmonths = date.minusMonths(9);
								
								for(Pen p1 : penMap.values())
								{
									if(p1.getUpdateDate().isBefore(nmonths))
									{
										penMap.remove(p1);
									}
								}
								System.out.println("Pens removed which are not sold from 9 months");
								break;
								
						case 5://Display all
								System.out.println("Displaying all ");
								
								/*penMap.values().stream()
								.forEach(s->System.out.println(s));
								break;*/
								
								for(Pen p2 : penMap.values())
								{
									System.out.println(p2);
								}
								
						case 6://Sort by update date
								System.out.println("Sorted by update date");
								penMap.values().stream()
								.sorted((a,b)->a.getUpdateDate().compareTo(b.getUpdateDate()))
								.forEach(s->System.out.println(s));
								break;
								
						case 7://Sort by price in desc order
								System.out.println("Sorted by price in desc order");
								penMap.values().stream()
								.sorted((a,b)->((Double)b.getPrice()).compareTo(a.getPrice()))
								.forEach(s->System.out.println(s));
								break;
								
						case 8://Remove pen price less than 20
								for(Pen p1 : penMap.values())
								{
									if(p1.getPrice()<20)
									{
										penMap.remove(p1);
									}
								}
								System.out.println("Removed pen price less than 20");
								break;
								
						case 9: //Remove pens of alloy steel
								for(Pen p1 : penMap.values())
								{
									if(p1.getMaterial()==Material.ALLOYSTEEL)
									{
										penMap.remove(p1);
									}
								}
								System.out.println("Removed pens of alloy steel");
								break;
								
						case 10://Remove pens of specific brand enter by user
								System.out.println("Enter brand to be removed");
								String brand = sc.next().toUpperCase();
								Brand b = PenValidation.parseAndValidateBrand(brand);
								
								for(Pen p1 : penMap.values())
								{
									if(p1.getBrand()==b)
									{
										penMap.remove(p1);
									}
								}
								System.out.println("Removed pens of specific brand enter by user");
								break;
								
						case 11: //remove pen if qty is 0
								for(Pen p3: penMap.values())
								{
									if(p3.getQty()==0)
									{
										penMap.remove(p3);
									}
								}
								
						case 0://Exit
								exit=true;
				
					}
				}
				catch(Exception e)
				{
					e.printStackTrace();
				}
			}
		}
	}

}
